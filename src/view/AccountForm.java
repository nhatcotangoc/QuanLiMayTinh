/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import com.github.dreamroute.excel.helper.ExcelHelper;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UnsupportedLookAndFeelException;
import view.Navbar;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import model.Account;
import dao.AccountDAO;
import static java.awt.Color.black;
import java.awt.Desktop;
import java.awt.Frame;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.lang.AutoCloseable;
import java.io.Closeable;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Tran Nhat Sinh
 */
public class AccountForm extends javax.swing.JInternalFrame{

    /**
     * Creates new form AccountForm
     */

    public AccountForm() {
        
        initComponents();
        UIManager.put( "Table.showVerticalLines", true );
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
       // ui.setNorthPane(null);
       
//        tblAccount.setEnabled(false);
        tblAccount.setDefaultEditor(Object.class, null);
        doDuLieuRaTable();
        changeTextFind();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnAdd = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        exportExcel = new javax.swing.JButton();
        importExcel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxFind = new javax.swing.JComboBox<>();
        jTextFildFind = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("THÊM TÀI KHOẢN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Họ và tên");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Tên đăng nhập");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mật khẩu");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Vai trò");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Thêm tài khoản");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jComboBox1, 0, 269, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_add_40px.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdd);

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_delete_40px.png"))); // NOI18N
        jButton4.setText("Xoá");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_edit_40px.png"))); // NOI18N
        jButton5.setText("Sửa");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator1);

        exportExcel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        exportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_spreadsheet_file_40px.png"))); // NOI18N
        exportExcel.setText("Xuất Excel");
        exportExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportExcelActionPerformed(evt);
            }
        });
        jToolBar1.add(exportExcel);

        importExcel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        importExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_xls_40px.png"))); // NOI18N
        importExcel.setText("Nhập Excel");
        importExcel.setFocusable(false);
        importExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        importExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        importExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importExcelActionPerformed(evt);
            }
        });
        jToolBar1.add(importExcel);

        jPanel2.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 80));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxFind.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxFind.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Tên tài khoản", "Tên đăng nhập", "Vai trò" }));
        jPanel3.add(jComboBoxFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 130, 40));

        jTextFildFind.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFildFindInputMethodTextChanged(evt);
            }
        });
        jTextFildFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFildFindActionPerformed(evt);
            }
        });
        jTextFildFind.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFildFindPropertyChange(evt);
            }
        });
        jPanel3.add(jTextFildFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 280, 40));

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_search_25px.png"))); // NOI18N
        jButton7.setText("Tìm kiếm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 120, 40));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 640, 82));

        jScrollPane1.setBorder(null);

        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên tài khoản", "Tên đăng nhập", "Vai trò", "Mật khẩu"
            }
        ));
        tblAccount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblAccount.setGridColor(new java.awt.Color(204, 204, 204));
        tblAccount.setShowGrid(true);
        jScrollPane1.setViewportView(tblAccount);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1000, 550));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
            AddAccount a;     
            a = new AddAccount(this,rootPaneCheckingEnabled);
            a.setVisible(true);
       
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        UpdateAccount u = new UpdateAccount(this,rootPaneCheckingEnabled);
        u.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        xoaAccountSelect();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void exportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportExcelActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            if(saveFile != null){
                saveFile = new File(saveFile.toString()+".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Account");
                
                Row rowCol = sheet.createRow(0);
                for(int i=0;i<tblAccount.getColumnCount();i++){
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblAccount.getColumnName(i));
                }
                
                for(int j=0;j<tblAccount.getRowCount();j++){
                    Row row = sheet.createRow(j+1);
                    for(int k=0;k<tblAccount.getColumnCount();k++){
                        Cell cell = row.createCell(k);
                        if(tblAccount.getValueAt(j, k)!=null){
                            cell.setCellValue(tblAccount.getValueAt(j, k).toString());
                        }
                        
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else{
                JOptionPane.showMessageDialog(null, "Error");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_exportExcelActionPerformed

    private void importExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importExcelActionPerformed
        // TODO add your handling code here:
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;
        ArrayList<Account> listAccExcel = new ArrayList<Account>();
        JFileChooser jf = new JFileChooser();
        int result = jf.showOpenDialog(null);
        jf.setDialogTitle("Open file");
        Workbook workbook = null;
        if(result == JFileChooser.APPROVE_OPTION){
            try {
                excelFile = jf.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                
                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                System.out.println("Excel:");
                for(int row = 1; row < excelSheet.getLastRowNum();row++){
                    XSSFRow excelRow = excelSheet.getRow(row);
//                    for(int column=0;column<excelRow.getLastCellNum();column++){
//                        XSSFCell excelCell = excelRow.getCell(column);
//                        System.out.print(excelCell.getStringCellValue()+" ");
//                    }
                   String fullName = excelRow.getCell(0).getStringCellValue();
                   String user = excelRow.getCell(1).getStringCellValue();
                   String password = excelRow.getCell(2).getStringCellValue();
                   String role = excelRow.getCell(3).getStringCellValue();
                   
                   Account acc = new Account(fullName, user, password, role);
                   listAccExcel.add(acc);
                   DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
                   table_acc.setRowCount(0);
                   for (Account account : listAccExcel) {
                        themAccountVaoTable(account);
                   }
                }
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AccountForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AccountForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_importExcelActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String luaChon = jComboBoxFind.getSelectedItem().toString();
        JOptionPane.showMessageDialog(this, luaChon);
        if(jTextFildFind.getText().length()!=0){
            if(luaChon.equals("Tất cả")){
                findAll();
            } else if(luaChon.equals("Tên tài khoản")){
                findFn();
            }else if(luaChon.equals("Tên đăng nhập")){
                findUs();
            } else if(luaChon.equals("Vai trò")){
                findRole();
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Bạn đã nhấn tìm");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextFildFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFildFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFildFindActionPerformed

    private void jTextFildFindPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextFildFindPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFildFindPropertyChange

    private void jTextFildFindInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFildFindInputMethodTextChanged
        // TODO add your handling code here: 
    }//GEN-LAST:event_jTextFildFindInputMethodTextChanged
    
   
    
    public void themAccountVaoTable(Account acc){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        table_acc.addRow(new Object[] {
        acc.getFullName(),
        acc.getUser(),
        acc.getRole(),
        acc.getPassword()
        });
    }
    
    
    public void doDuLieuRaTable(){
        for (Account acc : AccountDAO.getInstance().selectAll()) {
            themAccountVaoTable(acc);
        }
    }
    
    public void addAccount(Account account){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        AccountDAO.getInstance().insert(account);
        table_acc.setRowCount(0);
        for (Account acc : AccountDAO.getInstance().selectAll()) {
            themAccountVaoTable(acc);
        }
    }
    
    public void updateAcount(Account account){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        AccountDAO.getInstance().update(account);
        table_acc.setRowCount(0);
        for (Account acc : AccountDAO.getInstance().selectAll()) {
            themAccountVaoTable(acc);
        }
    }
    
    public Account getAccountSelect(){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int i_row = tblAccount.getSelectedRow();
        String fullName = table_acc.getValueAt(i_row, 0)+"";
        String user = table_acc.getValueAt(i_row, 1)+"";
        String role = table_acc.getValueAt(i_row, 2)+"";
        String password = table_acc.getValueAt(i_row, 3)+"";
        Account acc = new Account(fullName, user, password, role);
        return acc;
    }
    
    public void xoaAccountSelect(){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int i_row = tblAccount.getSelectedRow();
        int luaChon = JOptionPane.showConfirmDialog(this, "Admin có muốn xoá tài khoản này?", "Xoá tài khoản",
					JOptionPane.YES_NO_OPTION);
        if(luaChon==JOptionPane.YES_OPTION){
            AccountDAO.getInstance().delete(getAccountSelect());
            table_acc.removeRow(i_row);
        }
    }
    
    public void thucHienTaiLaiDuLieu(){
        while(true){
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int soLuongDong = table_acc.getRowCount();
        if(soLuongDong==0){
            break;
        } else{
            try {
               table_acc.removeRow(0);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        }
        for (Account acc : AccountDAO.getInstance().selectAll()) {
            themAccountVaoTable(acc);
        }
        
    }
    
    public void changeTextFind(){
        jTextFildFind.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            
        }           
        @Override
        public void removeUpdate(DocumentEvent e) {
        /* do nothing */
        if(jTextFildFind.getText().length()==0){
                thucHienTaiLaiDuLieu();
        }
        }
        @Override
        public void changedUpdate(DocumentEvent e) { 
        /* do nothing */ 
        
        }
    });
    }       
    public void findAll(){
        thucHienTaiLaiDuLieu();
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int soLuongDong = table_acc.getRowCount();
        String fullNameFind = jTextFildFind.getText();
        ArrayList<Account> listUserFind = new ArrayList<Account>();
        for(int i=0;i<soLuongDong;i++){
            String fullName =  table_acc.getValueAt(i, 0)+"";
            String user = table_acc.getValueAt(i, 1)+"";
            String check = fullName.concat(user);
            System.out.print(fullNameFind+"?"+check+"=");
            System.out.println(check.contains(fullNameFind));
            if(check.contains(fullNameFind)){
            String fullNameN = table_acc.getValueAt(i, 0)+"";
            String userN = table_acc.getValueAt(i, 1)+"";
            String roleN = table_acc.getValueAt(i, 2)+"";
            String passwordN = table_acc.getValueAt(i, 3)+"";
            Account acc = new Account(fullNameN, userN, passwordN, roleN);
            listUserFind.add(acc);
            }
        }
        table_acc.setRowCount(0);
        for (Account account : listUserFind) {
            themAccountVaoTable(account);
        }
        
    }
    
    public void findFn(){
        thucHienTaiLaiDuLieu();
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int soLuongDong = table_acc.getRowCount();
        String fullNameFind = jTextFildFind.getText();
        ArrayList<Account> listUserFind = new ArrayList<Account>();
        for(int i=0;i<soLuongDong;i++){
            String fullName =  table_acc.getValueAt(i, 0)+"";
            if(fullName.contains(fullNameFind)){
            String fullNameN = table_acc.getValueAt(i, 0)+"";
            String userN = table_acc.getValueAt(i, 1)+"";
            String roleN = table_acc.getValueAt(i, 2)+"";
            String passwordN = table_acc.getValueAt(i, 3)+"";
            Account acc = new Account(fullNameN, userN, passwordN, roleN);
            listUserFind.add(acc);
            }
        }
        table_acc.setRowCount(0);
        for (Account account : listUserFind) {
            themAccountVaoTable(account);
        }   
    }
    public void findUs(){
        thucHienTaiLaiDuLieu();
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int soLuongDong = table_acc.getRowCount();
        String userFind = jTextFildFind.getText();
        ArrayList<Account> listUserFind = new ArrayList<Account>();
        for(int i=0;i<soLuongDong;i++){
            String user =  table_acc.getValueAt(i, 1)+"";
            if(user.contains(userFind)){
            String fullNameN = table_acc.getValueAt(i, 0)+"";
            String userN = table_acc.getValueAt(i, 1)+"";
            String roleN = table_acc.getValueAt(i, 2)+"";
            String passwordN = table_acc.getValueAt(i, 3)+"";
            Account acc = new Account(fullNameN, userN, passwordN, roleN);
            listUserFind.add(acc);
            }
        }
        table_acc.setRowCount(0);
        for (Account account : listUserFind) {
            themAccountVaoTable(account);
        }   
    }
    public void findRole(){
        thucHienTaiLaiDuLieu();
        DefaultTableModel table_acc = (DefaultTableModel) tblAccount.getModel();
        int soLuongDong = table_acc.getRowCount();
        String roleFind = jTextFildFind.getText();
        ArrayList<Account> listUserFind = new ArrayList<Account>();
        for(int i=0;i<soLuongDong;i++){
            String role =  table_acc.getValueAt(i, 2)+"";
            System.out.println(roleFind+"Quyen:"+role);
                    
            if(roleFind.contains(role)){
            String fullNameN = table_acc.getValueAt(i, 0)+"";
            String userN = table_acc.getValueAt(i, 1)+"";
            String roleN = table_acc.getValueAt(i, 2)+"";
            String passwordN = table_acc.getValueAt(i, 3)+"";
            Account acc = new Account(fullNameN, userN, passwordN, roleN);
            listUserFind.add(acc);
            }
        }
        table_acc.setRowCount(0);
        for (Account account : listUserFind) {
            themAccountVaoTable(account);
        }   
    }
    
    public void openFile(String file){
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException e) {
            System.out.println(e);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exportExcel;
    private javax.swing.JButton importExcel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxFind;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextFildFind;
    private javax.swing.JToolBar jToolBar1;
    public javax.swing.JTable tblAccount;
    // End of variables declaration//GEN-END:variables

}
